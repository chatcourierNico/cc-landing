// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: iDYYucUMnPTZtZHWq6wa5S
// Component: tgm2DJkQXuO7

import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import {
  Flex as Flex__,
  MultiChoiceArg,
  PlasmicDataSourceContextProvider as PlasmicDataSourceContextProvider__,
  PlasmicIcon as PlasmicIcon__,
  PlasmicImg as PlasmicImg__,
  PlasmicLink as PlasmicLink__,
  PlasmicPageGuard as PlasmicPageGuard__,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  Stack as Stack__,
  StrictProps,
  Trans as Trans__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  generateOnMutateForSpec,
  generateStateOnChangeProp,
  generateStateOnChangePropForCodeComponents,
  generateStateValueProp,
  get as $stateGet,
  hasVariant,
  initializeCodeComponentStates,
  initializePlasmicStates,
  makeFragment,
  omit,
  pick,
  renderPlasmicSlot,
  set as $stateSet,
  useCurrentUser,
  useDollarState,
  usePlasmicTranslator,
  useTrigger,
  wrapWithClassName
} from "@plasmicapp/react-web";
import {
  DataCtxReader as DataCtxReader__,
  useDataEnv,
  useGlobalActions
} from "@plasmicapp/react-web/lib/host";

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic.module.css"; // plasmic-import: iDYYucUMnPTZtZHWq6wa5S/projectcss
import sty from "./PlasmicNewPage.module.css"; // plasmic-import: tgm2DJkQXuO7/css

import IconIcon from "./icons/PlasmicIcon__Icon"; // plasmic-import: FzR9L3DYjy5h/icon
import SmallIconIconIcon from "./icons/PlasmicIcon__SmallIconIcon"; // plasmic-import: MLAWlhgurTky/icon
import Frame1321314713Icon from "./icons/PlasmicIcon__Frame1321314713"; // plasmic-import: SCha68IwAUzf/icon
import Frame1321314714Icon from "./icons/PlasmicIcon__Frame1321314714"; // plasmic-import: 4Rdd2HDpY-cP/icon
import Frame1321314716Icon from "./icons/PlasmicIcon__Frame1321314716"; // plasmic-import: MW2RR3loffiy/icon
import Frame1321314715Icon from "./icons/PlasmicIcon__Frame1321314715"; // plasmic-import: r4H44p5dV4OR/icon
import Icon2Icon from "./icons/PlasmicIcon__Icon2"; // plasmic-import: ucoyANWg2kwU/icon

createPlasmicElementProxy;

export type PlasmicNewPage__VariantMembers = {};
export type PlasmicNewPage__VariantsArgs = {};
type VariantPropType = keyof PlasmicNewPage__VariantsArgs;
export const PlasmicNewPage__VariantProps = new Array<VariantPropType>();

export type PlasmicNewPage__ArgsType = {};
type ArgPropType = keyof PlasmicNewPage__ArgsType;
export const PlasmicNewPage__ArgProps = new Array<ArgPropType>();

export type PlasmicNewPage__OverridesType = {
  root?: Flex__<"div">;
  chatServiceIntegrationHubHome?: Flex__<"div">;
  typeHeaderWithSearchbarAndSignupCta?: Flex__<"div">;
  brand?: Flex__<"div">;
  brandName?: Flex__<"div">;
  inputForm?: Flex__<"div">;
  textContainer?: Flex__<"div">;
  placeholderText?: Flex__<"div">;
  navLinks?: Flex__<"div">;
  navLink?: Flex__<"div">;
  navLabel?: Flex__<"div">;
  button?: Flex__<"div">;
  textContainer2?: Flex__<"div">;
  cta?: Flex__<"div">;
  property1SoftwareHeroPhoneMockupWithBubbles?: Flex__<"div">;
  wrapper?: Flex__<"div">;
  copyContainer?: Flex__<"div">;
  copyComponent?: Flex__<"div">;
  headingText?: Flex__<"div">;
  heading?: Flex__<"div">;
  subheading?: Flex__<"div">;
  buttonCombo?: Flex__<"div">;
  ctaButton?: Flex__<"div">;
  textContainer3?: Flex__<"div">;
  cta2?: Flex__<"div">;
  secondaryButton?: Flex__<"div">;
  textContainer4?: Flex__<"div">;
  cta3?: Flex__<"div">;
  mediaLayouts?: Flex__<"div">;
  frame1321314717?: Flex__<"div">;
  device?: Flex__<"div">;
  iPhone14Starlight1?: Flex__<"div">;
  typeThreeFeatureCardsHorizontal?: Flex__<"div">;
  content?: Flex__<"div">;
  headingContainer?: Flex__<"div">;
  heading2?: Flex__<"div">;
  subheading2?: Flex__<"div">;
  cardsGrid?: Flex__<"div">;
  bigCard?: Flex__<"div">;
  content2?: Flex__<"div">;
  contentContainer?: Flex__<"div">;
  subheading3?: Flex__<"div">;
  content3?: Flex__<"div">;
  heading3?: Flex__<"div">;
  text?: Flex__<"div">;
  cta4?: Flex__<"div">;
  button2?: Flex__<"div">;
  cta5?: Flex__<"div">;
  imageLummi?: Flex__<"div">;
  bigCard2?: Flex__<"div">;
  content4?: Flex__<"div">;
  contentContainer2?: Flex__<"div">;
  subheading4?: Flex__<"div">;
  content5?: Flex__<"div">;
  heading4?: Flex__<"div">;
  text2?: Flex__<"div">;
  cta6?: Flex__<"div">;
  button3?: Flex__<"div">;
  cta7?: Flex__<"div">;
  imageLummi2?: Flex__<"div">;
  bigCard3?: Flex__<"div">;
  content6?: Flex__<"div">;
  contentContainer3?: Flex__<"div">;
  subheading5?: Flex__<"div">;
  content7?: Flex__<"div">;
  heading5?: Flex__<"div">;
  text3?: Flex__<"div">;
  cta8?: Flex__<"div">;
  button4?: Flex__<"div">;
  cta9?: Flex__<"div">;
  imageLummi3?: Flex__<"div">;
  property1StepsGridSingleImage?: Flex__<"div">;
  headingWrapper?: Flex__<"div">;
  headingContainer2?: Flex__<"div">;
  imageLummi4?: Flex__<"div">;
  copyComponent2?: Flex__<"div">;
  headingText2?: Flex__<"div">;
  heading6?: Flex__<"div">;
  subheading6?: Flex__<"div">;
  stepsWrapper?: Flex__<"div">;
  howItWorksGrid?: Flex__<"div">;
  step01?: Flex__<"div">;
  stepTitle?: Flex__<"div">;
  stepDescription?: Flex__<"div">;
  step02?: Flex__<"div">;
  stepTitle2?: Flex__<"div">;
  stepDescription2?: Flex__<"div">;
  step03?: Flex__<"div">;
  stepTitle3?: Flex__<"div">;
  stepDescription3?: Flex__<"div">;
  step04?: Flex__<"div">;
  stepTitle4?: Flex__<"div">;
  stepDescription4?: Flex__<"div">;
  property1CardsTestimonials?: Flex__<"div">;
  heading7?: Flex__<"div">;
  testimonialsGrid?: Flex__<"div">;
  testimonial?: Flex__<"div">;
  imageLummiCategoryavatars?: Flex__<"div">;
  name?: Flex__<"div">;
  shortTestimonial?: Flex__<"div">;
  testimonial2?: Flex__<"div">;
  imageLummiCategoryavatars2?: Flex__<"div">;
  name2?: Flex__<"div">;
  shortTestimonial2?: Flex__<"div">;
  testimonial3?: Flex__<"div">;
  imageLummiCategoryavatars3?: Flex__<"div">;
  name3?: Flex__<"div">;
  shortTestimonial3?: Flex__<"div">;
  property1PricingStartingFromProperty2SingleStacked?: Flex__<"div">;
  copyComponent3?: Flex__<"div">;
  headingText3?: Flex__<"div">;
  heading8?: Flex__<"div">;
  subheading7?: Flex__<"div">;
  pricing?: Flex__<"div">;
  textContent?: Flex__<"div">;
  title?: Flex__<"div">;
  price?: Flex__<"div">;
  _14?: Flex__<"div">;
  button5?: Flex__<"div">;
  textContainer5?: Flex__<"div">;
  cta10?: Flex__<"div">;
  property1ImageBackgroundSignup?: Flex__<"div">;
  imageLummi5?: Flex__<"div">;
  copyComponent4?: Flex__<"div">;
  headingContainer3?: Flex__<"div">;
  signUpHeading?: Flex__<"div">;
  subheading8?: Flex__<"div">;
  googleLogin?: Flex__<"div">;
  img?: Flex__<typeof PlasmicImg__>;
  continueWithGoogle?: Flex__<"div">;
  separator?: Flex__<"div">;
  line?: Flex__<"div">;
  line2?: Flex__<"div">;
  form?: Flex__<"div">;
  input?: Flex__<"div">;
  label?: Flex__<"div">;
  inputForm2?: Flex__<"div">;
  textContainer6?: Flex__<"div">;
  placeholderText2?: Flex__<"div">;
  button6?: Flex__<"div">;
  textContainer7?: Flex__<"div">;
  cta11?: Flex__<"div">;
  byContinuingYouAgreeToOurTermsOfServiceAndPrivacyPolicy?: Flex__<"div">;
  typeBubbleMegaMenuFooter?: Flex__<"div">;
  bubbleContainer?: Flex__<"div">;
  content8?: Flex__<"div">;
  brand2?: Flex__<"div">;
  logo?: Flex__<"div">;
  brandName2?: Flex__<"div">;
  slogan?: Flex__<"div">;
  links?: Flex__<"div">;
  list?: Flex__<"div">;
  listHeading?: Flex__<"div">;
  listLinkItem?: Flex__<"div">;
  listLinkItem2?: Flex__<"div">;
  listLinkItem3?: Flex__<"div">;
  list2?: Flex__<"div">;
  listHeading2?: Flex__<"div">;
  listLinkItem4?: Flex__<"div">;
  listLinkItem5?: Flex__<"div">;
  listLinkItem6?: Flex__<"div">;
  list3?: Flex__<"div">;
  listHeading3?: Flex__<"div">;
  listLinkItem7?: Flex__<"div">;
  listLinkItem8?: Flex__<"div">;
  listLinkItem9?: Flex__<"div">;
  divider?: Flex__<"div">;
  legals?: Flex__<"div">;
  copyright?: Flex__<"div">;
  list4?: Flex__<"div">;
  listLinkItem10?: Flex__<"div">;
  listLinkItem11?: Flex__<"div">;
};

export interface DefaultNewPageProps {}

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicNewPage__RenderFunc(props: {
  variants: PlasmicNewPage__VariantsArgs;
  args: PlasmicNewPage__ArgsType;
  overrides: PlasmicNewPage__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);

  const $props = {
    ...args,
    ...variants
  };

  const __nextRouter = useNextRouter();
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const currentUser = useCurrentUser?.() || {};

  return (
    <React.Fragment>
      <Head></Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            sty.root
          )}
        >
          <div
            data-plasmic-name={"chatServiceIntegrationHubHome"}
            data-plasmic-override={overrides.chatServiceIntegrationHubHome}
            className={classNames(
              projectcss.all,
              sty.chatServiceIntegrationHubHome
            )}
          >
            <Stack__
              as={"div"}
              data-plasmic-name={"typeHeaderWithSearchbarAndSignupCta"}
              data-plasmic-override={
                overrides.typeHeaderWithSearchbarAndSignupCta
              }
              hasGap={true}
              className={classNames(
                projectcss.all,
                sty.typeHeaderWithSearchbarAndSignupCta
              )}
            >
              <Stack__
                as={"div"}
                data-plasmic-name={"brand"}
                data-plasmic-override={overrides.brand}
                hasGap={true}
                className={classNames(projectcss.all, sty.brand)}
              >
                <IconIcon
                  className={classNames(projectcss.all, sty.svg__uAqRi)}
                  role={"img"}
                />

                <div
                  data-plasmic-name={"brandName"}
                  data-plasmic-override={overrides.brandName}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.brandName
                  )}
                >
                  {"ChatBridge"}
                </div>
              </Stack__>
              <Stack__
                as={"div"}
                data-plasmic-name={"inputForm"}
                data-plasmic-override={overrides.inputForm}
                hasGap={true}
                className={classNames(projectcss.all, sty.inputForm)}
              >
                <Stack__
                  as={"div"}
                  data-plasmic-name={"textContainer"}
                  data-plasmic-override={overrides.textContainer}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.textContainer)}
                >
                  <div
                    data-plasmic-name={"placeholderText"}
                    data-plasmic-override={overrides.placeholderText}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.placeholderText
                    )}
                  >
                    {"Find"}
                  </div>
                </Stack__>
              </Stack__>
              <Stack__
                as={"div"}
                data-plasmic-name={"navLinks"}
                data-plasmic-override={overrides.navLinks}
                hasGap={true}
                className={classNames(projectcss.all, sty.navLinks)}
              >
                <Stack__
                  as={"div"}
                  data-plasmic-name={"navLink"}
                  data-plasmic-override={overrides.navLink}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.navLink)}
                >
                  <div
                    data-plasmic-name={"navLabel"}
                    data-plasmic-override={overrides.navLabel}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.navLabel
                    )}
                  >
                    {"Services"}
                  </div>
                  <SmallIconIconIcon
                    className={classNames(projectcss.all, sty.svg___0CWd)}
                    role={"img"}
                  />
                </Stack__>
                <Stack__
                  as={"div"}
                  data-plasmic-name={"button"}
                  data-plasmic-override={overrides.button}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.button)}
                >
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"textContainer2"}
                    data-plasmic-override={overrides.textContainer2}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.textContainer2)}
                  >
                    <div
                      data-plasmic-name={"cta"}
                      data-plasmic-override={overrides.cta}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.cta
                      )}
                    >
                      {"Join Now"}
                    </div>
                  </Stack__>
                </Stack__>
              </Stack__>
            </Stack__>
            <div
              data-plasmic-name={"property1SoftwareHeroPhoneMockupWithBubbles"}
              data-plasmic-override={
                overrides.property1SoftwareHeroPhoneMockupWithBubbles
              }
              className={classNames(
                projectcss.all,
                sty.property1SoftwareHeroPhoneMockupWithBubbles
              )}
            >
              <div
                data-plasmic-name={"wrapper"}
                data-plasmic-override={overrides.wrapper}
                className={classNames(projectcss.all, sty.wrapper)}
              >
                <Stack__
                  as={"div"}
                  data-plasmic-name={"copyContainer"}
                  data-plasmic-override={overrides.copyContainer}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.copyContainer)}
                >
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"copyComponent"}
                    data-plasmic-override={overrides.copyComponent}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.copyComponent)}
                  >
                    <Stack__
                      as={"div"}
                      data-plasmic-name={"headingText"}
                      data-plasmic-override={overrides.headingText}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.headingText)}
                    >
                      <div
                        data-plasmic-name={"heading"}
                        data-plasmic-override={overrides.heading}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.heading
                        )}
                      >
                        {"Seamless Messaging Across Platforms"}
                      </div>
                      <div
                        data-plasmic-name={"subheading"}
                        data-plasmic-override={overrides.subheading}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.subheading
                        )}
                      >
                        {
                          "Configure your chat accounts and sync messages across Slack, Discord, and WhatsApp effortlessly."
                        }
                      </div>
                    </Stack__>
                    <Stack__
                      as={"div"}
                      data-plasmic-name={"buttonCombo"}
                      data-plasmic-override={overrides.buttonCombo}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.buttonCombo)}
                    >
                      <Stack__
                        as={"div"}
                        data-plasmic-name={"ctaButton"}
                        data-plasmic-override={overrides.ctaButton}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.ctaButton)}
                      >
                        <Stack__
                          as={"div"}
                          data-plasmic-name={"textContainer3"}
                          data-plasmic-override={overrides.textContainer3}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.textContainer3
                          )}
                        >
                          <div
                            data-plasmic-name={"cta2"}
                            data-plasmic-override={overrides.cta2}
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.cta2
                            )}
                          >
                            {"Get Started"}
                          </div>
                        </Stack__>
                      </Stack__>
                      <Stack__
                        as={"div"}
                        data-plasmic-name={"secondaryButton"}
                        data-plasmic-override={overrides.secondaryButton}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.secondaryButton
                        )}
                      >
                        <Stack__
                          as={"div"}
                          data-plasmic-name={"textContainer4"}
                          data-plasmic-override={overrides.textContainer4}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.textContainer4
                          )}
                        >
                          <div
                            data-plasmic-name={"cta3"}
                            data-plasmic-override={overrides.cta3}
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.cta3
                            )}
                          >
                            {"Learn More"}
                          </div>
                        </Stack__>
                      </Stack__>
                    </Stack__>
                  </Stack__>
                </Stack__>
                <div
                  data-plasmic-name={"mediaLayouts"}
                  data-plasmic-override={overrides.mediaLayouts}
                  className={classNames(projectcss.all, sty.mediaLayouts)}
                >
                  <Stack__
                    as={Frame1321314713Icon}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.svg__al7Dk)}
                    role={"img"}
                  />

                  <Stack__
                    as={Frame1321314714Icon}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.svg___4Yyu1)}
                    role={"img"}
                  />

                  <Stack__
                    as={Frame1321314716Icon}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.svg__tlYy2)}
                    role={"img"}
                  />

                  <Stack__
                    as={Frame1321314715Icon}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.svg__dn2C4)}
                    role={"img"}
                  />

                  <Stack__
                    as={"div"}
                    data-plasmic-name={"frame1321314717"}
                    data-plasmic-override={overrides.frame1321314717}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame1321314717)}
                  >
                    <div
                      data-plasmic-name={"device"}
                      data-plasmic-override={overrides.device}
                      className={classNames(projectcss.all, sty.device)}
                    >
                      <div
                        data-plasmic-name={"iPhone14Starlight1"}
                        data-plasmic-override={overrides.iPhone14Starlight1}
                        className={classNames(
                          projectcss.all,
                          sty.iPhone14Starlight1
                        )}
                      />
                    </div>
                  </Stack__>
                </div>
              </div>
            </div>
            <Stack__
              as={"div"}
              data-plasmic-name={"typeThreeFeatureCardsHorizontal"}
              data-plasmic-override={overrides.typeThreeFeatureCardsHorizontal}
              hasGap={true}
              className={classNames(
                projectcss.all,
                sty.typeThreeFeatureCardsHorizontal
              )}
            >
              <Stack__
                as={"div"}
                data-plasmic-name={"content"}
                data-plasmic-override={overrides.content}
                hasGap={true}
                className={classNames(projectcss.all, sty.content)}
              >
                <Stack__
                  as={"div"}
                  data-plasmic-name={"headingContainer"}
                  data-plasmic-override={overrides.headingContainer}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.headingContainer)}
                >
                  <div
                    data-plasmic-name={"heading2"}
                    data-plasmic-override={overrides.heading2}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.heading2
                    )}
                  >
                    {"Connect All Your Chats"}
                  </div>
                  <div
                    data-plasmic-name={"subheading2"}
                    data-plasmic-override={overrides.subheading2}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.subheading2
                    )}
                  >
                    {"Unified messaging for modern teams"}
                  </div>
                </Stack__>
                <Stack__
                  as={"div"}
                  data-plasmic-name={"cardsGrid"}
                  data-plasmic-override={overrides.cardsGrid}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.cardsGrid)}
                >
                  <div
                    data-plasmic-name={"bigCard"}
                    data-plasmic-override={overrides.bigCard}
                    className={classNames(projectcss.all, sty.bigCard)}
                  >
                    <Stack__
                      as={"div"}
                      data-plasmic-name={"content2"}
                      data-plasmic-override={overrides.content2}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.content2)}
                    >
                      <Stack__
                        as={"div"}
                        data-plasmic-name={"contentContainer"}
                        data-plasmic-override={overrides.contentContainer}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.contentContainer
                        )}
                      >
                        <div
                          data-plasmic-name={"subheading3"}
                          data-plasmic-override={overrides.subheading3}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.subheading3
                          )}
                        >
                          {"Effortless Communication"}
                        </div>
                        <Stack__
                          as={"div"}
                          data-plasmic-name={"content3"}
                          data-plasmic-override={overrides.content3}
                          hasGap={true}
                          className={classNames(projectcss.all, sty.content3)}
                        >
                          <div
                            data-plasmic-name={"heading3"}
                            data-plasmic-override={overrides.heading3}
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.heading3
                            )}
                          >
                            {"Configure once, chat anywhere"}
                          </div>
                          <div
                            data-plasmic-name={"text"}
                            data-plasmic-override={overrides.text}
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text
                            )}
                          >
                            {"Sync messages across platforms"}
                          </div>
                        </Stack__>
                      </Stack__>
                      <Stack__
                        as={"div"}
                        data-plasmic-name={"cta4"}
                        data-plasmic-override={overrides.cta4}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.cta4)}
                      >
                        <Stack__
                          as={"div"}
                          data-plasmic-name={"button2"}
                          data-plasmic-override={overrides.button2}
                          hasGap={true}
                          className={classNames(projectcss.all, sty.button2)}
                        >
                          <div
                            data-plasmic-name={"cta5"}
                            data-plasmic-override={overrides.cta5}
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.cta5
                            )}
                          >
                            {"Get Started"}
                          </div>
                        </Stack__>
                      </Stack__>
                    </Stack__>
                    <div
                      data-plasmic-name={"imageLummi"}
                      data-plasmic-override={overrides.imageLummi}
                      className={classNames(projectcss.all, sty.imageLummi)}
                    />
                  </div>
                  <div
                    data-plasmic-name={"bigCard2"}
                    data-plasmic-override={overrides.bigCard2}
                    className={classNames(projectcss.all, sty.bigCard2)}
                  >
                    <Stack__
                      as={"div"}
                      data-plasmic-name={"content4"}
                      data-plasmic-override={overrides.content4}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.content4)}
                    >
                      <Stack__
                        as={"div"}
                        data-plasmic-name={"contentContainer2"}
                        data-plasmic-override={overrides.contentContainer2}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.contentContainer2
                        )}
                      >
                        <div
                          data-plasmic-name={"subheading4"}
                          data-plasmic-override={overrides.subheading4}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.subheading4
                          )}
                        >
                          {"Customer Support Made Easy"}
                        </div>
                        <Stack__
                          as={"div"}
                          data-plasmic-name={"content5"}
                          data-plasmic-override={overrides.content5}
                          hasGap={true}
                          className={classNames(projectcss.all, sty.content5)}
                        >
                          <div
                            data-plasmic-name={"heading4"}
                            data-plasmic-override={overrides.heading4}
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.heading4
                            )}
                          >
                            {"Manage customer support chats"}
                          </div>
                          <div
                            data-plasmic-name={"text2"}
                            data-plasmic-override={overrides.text2}
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text2
                            )}
                          >
                            {"Answer WhatsApp from Slack"}
                          </div>
                        </Stack__>
                      </Stack__>
                      <Stack__
                        as={"div"}
                        data-plasmic-name={"cta6"}
                        data-plasmic-override={overrides.cta6}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.cta6)}
                      >
                        <Stack__
                          as={"div"}
                          data-plasmic-name={"button3"}
                          data-plasmic-override={overrides.button3}
                          hasGap={true}
                          className={classNames(projectcss.all, sty.button3)}
                        >
                          <div
                            data-plasmic-name={"cta7"}
                            data-plasmic-override={overrides.cta7}
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.cta7
                            )}
                          >
                            {"Learn More"}
                          </div>
                        </Stack__>
                      </Stack__>
                    </Stack__>
                    <div
                      data-plasmic-name={"imageLummi2"}
                      data-plasmic-override={overrides.imageLummi2}
                      className={classNames(projectcss.all, sty.imageLummi2)}
                    />
                  </div>
                  <div
                    data-plasmic-name={"bigCard3"}
                    data-plasmic-override={overrides.bigCard3}
                    className={classNames(projectcss.all, sty.bigCard3)}
                  >
                    <Stack__
                      as={"div"}
                      data-plasmic-name={"content6"}
                      data-plasmic-override={overrides.content6}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.content6)}
                    >
                      <Stack__
                        as={"div"}
                        data-plasmic-name={"contentContainer3"}
                        data-plasmic-override={overrides.contentContainer3}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.contentContainer3
                        )}
                      >
                        <div
                          data-plasmic-name={"subheading5"}
                          data-plasmic-override={overrides.subheading5}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.subheading5
                          )}
                        >
                          {"Team Collaboration Simplified"}
                        </div>
                        <Stack__
                          as={"div"}
                          data-plasmic-name={"content7"}
                          data-plasmic-override={overrides.content7}
                          hasGap={true}
                          className={classNames(projectcss.all, sty.content7)}
                        >
                          <div
                            data-plasmic-name={"heading5"}
                            data-plasmic-override={overrides.heading5}
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.heading5
                            )}
                          >
                            {"Unified chat for better teamwork"}
                          </div>
                          <div
                            data-plasmic-name={"text3"}
                            data-plasmic-override={overrides.text3}
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text3
                            )}
                          >
                            {"Slack, Discord, WhatsApp sync"}
                          </div>
                        </Stack__>
                      </Stack__>
                      <Stack__
                        as={"div"}
                        data-plasmic-name={"cta8"}
                        data-plasmic-override={overrides.cta8}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.cta8)}
                      >
                        <Stack__
                          as={"div"}
                          data-plasmic-name={"button4"}
                          data-plasmic-override={overrides.button4}
                          hasGap={true}
                          className={classNames(projectcss.all, sty.button4)}
                        >
                          <div
                            data-plasmic-name={"cta9"}
                            data-plasmic-override={overrides.cta9}
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.cta9
                            )}
                          >
                            {"Get Started"}
                          </div>
                        </Stack__>
                      </Stack__>
                    </Stack__>
                    <div
                      data-plasmic-name={"imageLummi3"}
                      data-plasmic-override={overrides.imageLummi3}
                      className={classNames(projectcss.all, sty.imageLummi3)}
                    />
                  </div>
                </Stack__>
              </Stack__>
            </Stack__>
            <div
              data-plasmic-name={"property1StepsGridSingleImage"}
              data-plasmic-override={overrides.property1StepsGridSingleImage}
              className={classNames(
                projectcss.all,
                sty.property1StepsGridSingleImage
              )}
            >
              <Stack__
                as={"div"}
                data-plasmic-name={"headingWrapper"}
                data-plasmic-override={overrides.headingWrapper}
                hasGap={true}
                className={classNames(projectcss.all, sty.headingWrapper)}
              >
                <Stack__
                  as={"div"}
                  data-plasmic-name={"headingContainer2"}
                  data-plasmic-override={overrides.headingContainer2}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.headingContainer2)}
                >
                  <div
                    data-plasmic-name={"imageLummi4"}
                    data-plasmic-override={overrides.imageLummi4}
                    className={classNames(projectcss.all, sty.imageLummi4)}
                  />

                  <Stack__
                    as={"div"}
                    data-plasmic-name={"copyComponent2"}
                    data-plasmic-override={overrides.copyComponent2}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.copyComponent2)}
                  >
                    <Stack__
                      as={"div"}
                      data-plasmic-name={"headingText2"}
                      data-plasmic-override={overrides.headingText2}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.headingText2)}
                    >
                      <div
                        data-plasmic-name={"heading6"}
                        data-plasmic-override={overrides.heading6}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.heading6
                        )}
                      >
                        {"How It Works"}
                      </div>
                      <div
                        data-plasmic-name={"subheading6"}
                        data-plasmic-override={overrides.subheading6}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.subheading6
                        )}
                      >
                        {"Follow these simple steps to get started."}
                      </div>
                    </Stack__>
                  </Stack__>
                </Stack__>
              </Stack__>
              <Stack__
                as={"div"}
                data-plasmic-name={"stepsWrapper"}
                data-plasmic-override={overrides.stepsWrapper}
                hasGap={true}
                className={classNames(projectcss.all, sty.stepsWrapper)}
              >
                <Stack__
                  as={"div"}
                  data-plasmic-name={"howItWorksGrid"}
                  data-plasmic-override={overrides.howItWorksGrid}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.howItWorksGrid)}
                >
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"step01"}
                    data-plasmic-override={overrides.step01}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.step01)}
                  >
                    <div
                      data-plasmic-name={"stepTitle"}
                      data-plasmic-override={overrides.stepTitle}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.stepTitle
                      )}
                    >
                      {"Connect Accounts"}
                    </div>
                    <div
                      data-plasmic-name={"stepDescription"}
                      data-plasmic-override={overrides.stepDescription}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.stepDescription
                      )}
                    >
                      {"Link your chat services"}
                    </div>
                  </Stack__>
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"step02"}
                    data-plasmic-override={overrides.step02}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.step02)}
                  >
                    <div
                      data-plasmic-name={"stepTitle2"}
                      data-plasmic-override={overrides.stepTitle2}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.stepTitle2
                      )}
                    >
                      {"Configure Settings"}
                    </div>
                    <div
                      data-plasmic-name={"stepDescription2"}
                      data-plasmic-override={overrides.stepDescription2}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.stepDescription2
                      )}
                    >
                      {"Set preferences and sync"}
                    </div>
                  </Stack__>
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"step03"}
                    data-plasmic-override={overrides.step03}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.step03)}
                  >
                    <div
                      data-plasmic-name={"stepTitle3"}
                      data-plasmic-override={overrides.stepTitle3}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.stepTitle3
                      )}
                    >
                      {"Start Chatting"}
                    </div>
                    <div
                      data-plasmic-name={"stepDescription3"}
                      data-plasmic-override={overrides.stepDescription3}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.stepDescription3
                      )}
                    >
                      {"Use your preferred platform"}
                    </div>
                  </Stack__>
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"step04"}
                    data-plasmic-override={overrides.step04}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.step04)}
                  >
                    <div
                      data-plasmic-name={"stepTitle4"}
                      data-plasmic-override={overrides.stepTitle4}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.stepTitle4
                      )}
                    >
                      {"Support Simplified"}
                    </div>
                    <div
                      data-plasmic-name={"stepDescription4"}
                      data-plasmic-override={overrides.stepDescription4}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.stepDescription4
                      )}
                    >
                      {"Manage all chats seamlessly"}
                    </div>
                  </Stack__>
                </Stack__>
              </Stack__>
            </div>
            <Stack__
              as={"div"}
              data-plasmic-name={"property1CardsTestimonials"}
              data-plasmic-override={overrides.property1CardsTestimonials}
              hasGap={true}
              className={classNames(
                projectcss.all,
                sty.property1CardsTestimonials
              )}
            >
              <div
                data-plasmic-name={"heading7"}
                data-plasmic-override={overrides.heading7}
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.heading7
                )}
              >
                {"Our Users Love Us"}
              </div>
              <Stack__
                as={"div"}
                data-plasmic-name={"testimonialsGrid"}
                data-plasmic-override={overrides.testimonialsGrid}
                hasGap={true}
                className={classNames(projectcss.all, sty.testimonialsGrid)}
              >
                <Stack__
                  as={"div"}
                  data-plasmic-name={"testimonial"}
                  data-plasmic-override={overrides.testimonial}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.testimonial)}
                >
                  <div
                    data-plasmic-name={"imageLummiCategoryavatars"}
                    data-plasmic-override={overrides.imageLummiCategoryavatars}
                    className={classNames(
                      projectcss.all,
                      sty.imageLummiCategoryavatars
                    )}
                  />

                  <div
                    data-plasmic-name={"name"}
                    data-plasmic-override={overrides.name}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.name
                    )}
                  >
                    {"John Doe, CEO"}
                  </div>
                  <div
                    data-plasmic-name={"shortTestimonial"}
                    data-plasmic-override={overrides.shortTestimonial}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.shortTestimonial
                    )}
                  >
                    {
                      "\u201cThis service has revolutionized our communication.\u201d"
                    }
                  </div>
                </Stack__>
                <Stack__
                  as={"div"}
                  data-plasmic-name={"testimonial2"}
                  data-plasmic-override={overrides.testimonial2}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.testimonial2)}
                >
                  <div
                    data-plasmic-name={"imageLummiCategoryavatars2"}
                    data-plasmic-override={overrides.imageLummiCategoryavatars2}
                    className={classNames(
                      projectcss.all,
                      sty.imageLummiCategoryavatars2
                    )}
                  />

                  <div
                    data-plasmic-name={"name2"}
                    data-plasmic-override={overrides.name2}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.name2
                    )}
                  >
                    {"Jane Smith, CTO"}
                  </div>
                  <div
                    data-plasmic-name={"shortTestimonial2"}
                    data-plasmic-override={overrides.shortTestimonial2}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.shortTestimonial2
                    )}
                  >
                    {
                      "\u201cA must-have for any team using multiple chat platforms.\u201d"
                    }
                  </div>
                </Stack__>
                <Stack__
                  as={"div"}
                  data-plasmic-name={"testimonial3"}
                  data-plasmic-override={overrides.testimonial3}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.testimonial3)}
                >
                  <div
                    data-plasmic-name={"imageLummiCategoryavatars3"}
                    data-plasmic-override={overrides.imageLummiCategoryavatars3}
                    className={classNames(
                      projectcss.all,
                      sty.imageLummiCategoryavatars3
                    )}
                  />

                  <div
                    data-plasmic-name={"name3"}
                    data-plasmic-override={overrides.name3}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.name3
                    )}
                  >
                    {"Alex Johnson, Manager"}
                  </div>
                  <div
                    data-plasmic-name={"shortTestimonial3"}
                    data-plasmic-override={overrides.shortTestimonial3}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.shortTestimonial3
                    )}
                  >
                    {"\u201cIncredibly easy to set up and use.\u201d"}
                  </div>
                </Stack__>
              </Stack__>
            </Stack__>
            <Stack__
              as={"div"}
              data-plasmic-name={
                "property1PricingStartingFromProperty2SingleStacked"
              }
              data-plasmic-override={
                overrides.property1PricingStartingFromProperty2SingleStacked
              }
              hasGap={true}
              className={classNames(
                projectcss.all,
                sty.property1PricingStartingFromProperty2SingleStacked
              )}
            >
              <Stack__
                as={"div"}
                data-plasmic-name={"copyComponent3"}
                data-plasmic-override={overrides.copyComponent3}
                hasGap={true}
                className={classNames(projectcss.all, sty.copyComponent3)}
              >
                <Stack__
                  as={"div"}
                  data-plasmic-name={"headingText3"}
                  data-plasmic-override={overrides.headingText3}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.headingText3)}
                >
                  <div
                    data-plasmic-name={"heading8"}
                    data-plasmic-override={overrides.heading8}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.heading8
                    )}
                  >
                    {"Affordable Pricing"}
                  </div>
                  <div
                    data-plasmic-name={"subheading7"}
                    data-plasmic-override={overrides.subheading7}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.subheading7
                    )}
                  >
                    {
                      "Experience the best chat syncing service at a competitive price."
                    }
                  </div>
                </Stack__>
              </Stack__>
              <Stack__
                as={"div"}
                data-plasmic-name={"pricing"}
                data-plasmic-override={overrides.pricing}
                hasGap={true}
                className={classNames(projectcss.all, sty.pricing)}
              >
                <Stack__
                  as={"div"}
                  data-plasmic-name={"textContent"}
                  data-plasmic-override={overrides.textContent}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.textContent)}
                >
                  <div
                    data-plasmic-name={"title"}
                    data-plasmic-override={overrides.title}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.title
                    )}
                  >
                    {"Starting from"}
                  </div>
                  <div
                    data-plasmic-name={"price"}
                    data-plasmic-override={overrides.price}
                    className={classNames(projectcss.all, sty.price)}
                  >
                    <div
                      data-plasmic-name={"_14"}
                      data-plasmic-override={overrides._14}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty._14
                      )}
                    >
                      {"$14,"}
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___7KhVj
                      )}
                    >
                      {"99"}
                    </div>
                  </div>
                </Stack__>
              </Stack__>
              <Stack__
                as={"div"}
                data-plasmic-name={"button5"}
                data-plasmic-override={overrides.button5}
                hasGap={true}
                className={classNames(projectcss.all, sty.button5)}
              >
                <Stack__
                  as={"div"}
                  data-plasmic-name={"textContainer5"}
                  data-plasmic-override={overrides.textContainer5}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.textContainer5)}
                >
                  <div
                    data-plasmic-name={"cta10"}
                    data-plasmic-override={overrides.cta10}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.cta10
                    )}
                  >
                    {"Get Started"}
                  </div>
                </Stack__>
              </Stack__>
            </Stack__>
            <div
              data-plasmic-name={"property1ImageBackgroundSignup"}
              data-plasmic-override={overrides.property1ImageBackgroundSignup}
              className={classNames(
                projectcss.all,
                sty.property1ImageBackgroundSignup
              )}
            >
              <div
                data-plasmic-name={"imageLummi5"}
                data-plasmic-override={overrides.imageLummi5}
                className={classNames(projectcss.all, sty.imageLummi5)}
              />

              <Stack__
                as={"div"}
                data-plasmic-name={"copyComponent4"}
                data-plasmic-override={overrides.copyComponent4}
                hasGap={true}
                className={classNames(projectcss.all, sty.copyComponent4)}
              >
                <Stack__
                  as={"div"}
                  data-plasmic-name={"headingContainer3"}
                  data-plasmic-override={overrides.headingContainer3}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.headingContainer3)}
                >
                  <div
                    data-plasmic-name={"signUpHeading"}
                    data-plasmic-override={overrides.signUpHeading}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.signUpHeading
                    )}
                  >
                    {"Sign up"}
                  </div>
                  <div
                    data-plasmic-name={"subheading8"}
                    data-plasmic-override={overrides.subheading8}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.subheading8
                    )}
                  >
                    {"Join Now!"}
                  </div>
                </Stack__>
                <Stack__
                  as={"div"}
                  data-plasmic-name={"googleLogin"}
                  data-plasmic-override={overrides.googleLogin}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.googleLogin)}
                >
                  <PlasmicImg__
                    data-plasmic-name={"img"}
                    data-plasmic-override={overrides.img}
                    alt={""}
                    className={classNames(sty.img)}
                    displayHeight={"24px"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"24px"}
                    loading={"lazy"}
                    src={{
                      src: "/plasmic/dark_saa_s_landing_page/images/googleIcon.svg",
                      fullWidth: 24,
                      fullHeight: 24,
                      aspectRatio: 1
                    }}
                  />

                  <div
                    data-plasmic-name={"continueWithGoogle"}
                    data-plasmic-override={overrides.continueWithGoogle}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.continueWithGoogle
                    )}
                  >
                    {"Sign in with Google"}
                  </div>
                </Stack__>
                <Stack__
                  as={"div"}
                  data-plasmic-name={"separator"}
                  data-plasmic-override={overrides.separator}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.separator)}
                >
                  <div
                    data-plasmic-name={"line"}
                    data-plasmic-override={overrides.line}
                    className={classNames(projectcss.all, sty.line)}
                  />

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__wayLt
                    )}
                  >
                    {"or"}
                  </div>
                  <div
                    data-plasmic-name={"line2"}
                    data-plasmic-override={overrides.line2}
                    className={classNames(projectcss.all, sty.line2)}
                  />
                </Stack__>
                <Stack__
                  as={"div"}
                  data-plasmic-name={"form"}
                  data-plasmic-override={overrides.form}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.form)}
                >
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"input"}
                    data-plasmic-override={overrides.input}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.input)}
                  >
                    <div
                      data-plasmic-name={"label"}
                      data-plasmic-override={overrides.label}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.label
                      )}
                    >
                      {"Your Email"}
                    </div>
                    <Stack__
                      as={"div"}
                      data-plasmic-name={"inputForm2"}
                      data-plasmic-override={overrides.inputForm2}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.inputForm2)}
                    >
                      <Stack__
                        as={"div"}
                        data-plasmic-name={"textContainer6"}
                        data-plasmic-override={overrides.textContainer6}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.textContainer6
                        )}
                      >
                        <div
                          data-plasmic-name={"placeholderText2"}
                          data-plasmic-override={overrides.placeholderText2}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.placeholderText2
                          )}
                        >
                          {"Enter Email"}
                        </div>
                      </Stack__>
                    </Stack__>
                  </Stack__>
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"button6"}
                    data-plasmic-override={overrides.button6}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.button6)}
                  >
                    <Stack__
                      as={"div"}
                      data-plasmic-name={"textContainer7"}
                      data-plasmic-override={overrides.textContainer7}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.textContainer7)}
                    >
                      <div
                        data-plasmic-name={"cta11"}
                        data-plasmic-override={overrides.cta11}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.cta11
                        )}
                      >
                        {"Sign in with Email"}
                      </div>
                    </Stack__>
                  </Stack__>
                </Stack__>
                <div
                  data-plasmic-name={
                    "byContinuingYouAgreeToOurTermsOfServiceAndPrivacyPolicy"
                  }
                  data-plasmic-override={
                    overrides.byContinuingYouAgreeToOurTermsOfServiceAndPrivacyPolicy
                  }
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.byContinuingYouAgreeToOurTermsOfServiceAndPrivacyPolicy
                  )}
                >
                  {
                    "By continuing, you agree to our Terms of Service and Privacy Policy"
                  }
                </div>
              </Stack__>
            </div>
            <Stack__
              as={"div"}
              data-plasmic-name={"typeBubbleMegaMenuFooter"}
              data-plasmic-override={overrides.typeBubbleMegaMenuFooter}
              hasGap={true}
              className={classNames(
                projectcss.all,
                sty.typeBubbleMegaMenuFooter
              )}
            >
              <Stack__
                as={"div"}
                data-plasmic-name={"bubbleContainer"}
                data-plasmic-override={overrides.bubbleContainer}
                hasGap={true}
                className={classNames(projectcss.all, sty.bubbleContainer)}
              >
                <Stack__
                  as={"div"}
                  data-plasmic-name={"content8"}
                  data-plasmic-override={overrides.content8}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.content8)}
                >
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"brand2"}
                    data-plasmic-override={overrides.brand2}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.brand2)}
                  >
                    <Stack__
                      as={"div"}
                      data-plasmic-name={"logo"}
                      data-plasmic-override={overrides.logo}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.logo)}
                    >
                      <Icon2Icon
                        className={classNames(projectcss.all, sty.svg__y9Ybs)}
                        role={"img"}
                      />

                      <div
                        data-plasmic-name={"brandName2"}
                        data-plasmic-override={overrides.brandName2}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.brandName2
                        )}
                      >
                        {"ChatBridge"}
                      </div>
                    </Stack__>
                    <div
                      data-plasmic-name={"slogan"}
                      data-plasmic-override={overrides.slogan}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.slogan
                      )}
                    >
                      {"Unify Your Chats"}
                    </div>
                  </Stack__>
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"links"}
                    data-plasmic-override={overrides.links}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.links)}
                  >
                    <Stack__
                      as={"div"}
                      data-plasmic-name={"list"}
                      data-plasmic-override={overrides.list}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.list)}
                    >
                      <div
                        data-plasmic-name={"listHeading"}
                        data-plasmic-override={overrides.listHeading}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.listHeading
                        )}
                      >
                        {"Company"}
                      </div>
                      <div
                        data-plasmic-name={"listLinkItem"}
                        data-plasmic-override={overrides.listLinkItem}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.listLinkItem
                        )}
                      >
                        {"About"}
                      </div>
                      <div
                        data-plasmic-name={"listLinkItem2"}
                        data-plasmic-override={overrides.listLinkItem2}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.listLinkItem2
                        )}
                      >
                        {"Careers"}
                      </div>
                      <div
                        data-plasmic-name={"listLinkItem3"}
                        data-plasmic-override={overrides.listLinkItem3}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.listLinkItem3
                        )}
                      >
                        {"Newsroom"}
                      </div>
                    </Stack__>
                    <Stack__
                      as={"div"}
                      data-plasmic-name={"list2"}
                      data-plasmic-override={overrides.list2}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.list2)}
                    >
                      <div
                        data-plasmic-name={"listHeading2"}
                        data-plasmic-override={overrides.listHeading2}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.listHeading2
                        )}
                      >
                        {"Features"}
                      </div>
                      <div
                        data-plasmic-name={"listLinkItem4"}
                        data-plasmic-override={overrides.listLinkItem4}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.listLinkItem4
                        )}
                      >
                        {"Speed"}
                      </div>
                      <div
                        data-plasmic-name={"listLinkItem5"}
                        data-plasmic-override={overrides.listLinkItem5}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.listLinkItem5
                        )}
                      >
                        {"Integration"}
                      </div>
                      <div
                        data-plasmic-name={"listLinkItem6"}
                        data-plasmic-override={overrides.listLinkItem6}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.listLinkItem6
                        )}
                      >
                        {"Support"}
                      </div>
                    </Stack__>
                    <Stack__
                      as={"div"}
                      data-plasmic-name={"list3"}
                      data-plasmic-override={overrides.list3}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.list3)}
                    >
                      <div
                        data-plasmic-name={"listHeading3"}
                        data-plasmic-override={overrides.listHeading3}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.listHeading3
                        )}
                      >
                        {"Social"}
                      </div>
                      <div
                        data-plasmic-name={"listLinkItem7"}
                        data-plasmic-override={overrides.listLinkItem7}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.listLinkItem7
                        )}
                      >
                        {"Twitter"}
                      </div>
                      <div
                        data-plasmic-name={"listLinkItem8"}
                        data-plasmic-override={overrides.listLinkItem8}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.listLinkItem8
                        )}
                      >
                        {"Instagram"}
                      </div>
                      <div
                        data-plasmic-name={"listLinkItem9"}
                        data-plasmic-override={overrides.listLinkItem9}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.listLinkItem9
                        )}
                      >
                        {"Threads"}
                      </div>
                    </Stack__>
                  </Stack__>
                </Stack__>
                <div
                  data-plasmic-name={"divider"}
                  data-plasmic-override={overrides.divider}
                  className={classNames(projectcss.all, sty.divider)}
                />

                <Stack__
                  as={"div"}
                  data-plasmic-name={"legals"}
                  data-plasmic-override={overrides.legals}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.legals)}
                >
                  <div
                    data-plasmic-name={"copyright"}
                    data-plasmic-override={overrides.copyright}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.copyright
                    )}
                  >
                    {"All rights reserved 2024"}
                  </div>
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"list4"}
                    data-plasmic-override={overrides.list4}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.list4)}
                  >
                    <div
                      data-plasmic-name={"listLinkItem10"}
                      data-plasmic-override={overrides.listLinkItem10}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.listLinkItem10
                      )}
                    >
                      {"Terms"}
                    </div>
                    <div
                      data-plasmic-name={"listLinkItem11"}
                      data-plasmic-override={overrides.listLinkItem11}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.listLinkItem11
                      )}
                    >
                      {"Privacy"}
                    </div>
                  </Stack__>
                </Stack__>
              </Stack__>
            </Stack__>
          </div>
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "chatServiceIntegrationHubHome",
    "typeHeaderWithSearchbarAndSignupCta",
    "brand",
    "brandName",
    "inputForm",
    "textContainer",
    "placeholderText",
    "navLinks",
    "navLink",
    "navLabel",
    "button",
    "textContainer2",
    "cta",
    "property1SoftwareHeroPhoneMockupWithBubbles",
    "wrapper",
    "copyContainer",
    "copyComponent",
    "headingText",
    "heading",
    "subheading",
    "buttonCombo",
    "ctaButton",
    "textContainer3",
    "cta2",
    "secondaryButton",
    "textContainer4",
    "cta3",
    "mediaLayouts",
    "frame1321314717",
    "device",
    "iPhone14Starlight1",
    "typeThreeFeatureCardsHorizontal",
    "content",
    "headingContainer",
    "heading2",
    "subheading2",
    "cardsGrid",
    "bigCard",
    "content2",
    "contentContainer",
    "subheading3",
    "content3",
    "heading3",
    "text",
    "cta4",
    "button2",
    "cta5",
    "imageLummi",
    "bigCard2",
    "content4",
    "contentContainer2",
    "subheading4",
    "content5",
    "heading4",
    "text2",
    "cta6",
    "button3",
    "cta7",
    "imageLummi2",
    "bigCard3",
    "content6",
    "contentContainer3",
    "subheading5",
    "content7",
    "heading5",
    "text3",
    "cta8",
    "button4",
    "cta9",
    "imageLummi3",
    "property1StepsGridSingleImage",
    "headingWrapper",
    "headingContainer2",
    "imageLummi4",
    "copyComponent2",
    "headingText2",
    "heading6",
    "subheading6",
    "stepsWrapper",
    "howItWorksGrid",
    "step01",
    "stepTitle",
    "stepDescription",
    "step02",
    "stepTitle2",
    "stepDescription2",
    "step03",
    "stepTitle3",
    "stepDescription3",
    "step04",
    "stepTitle4",
    "stepDescription4",
    "property1CardsTestimonials",
    "heading7",
    "testimonialsGrid",
    "testimonial",
    "imageLummiCategoryavatars",
    "name",
    "shortTestimonial",
    "testimonial2",
    "imageLummiCategoryavatars2",
    "name2",
    "shortTestimonial2",
    "testimonial3",
    "imageLummiCategoryavatars3",
    "name3",
    "shortTestimonial3",
    "property1PricingStartingFromProperty2SingleStacked",
    "copyComponent3",
    "headingText3",
    "heading8",
    "subheading7",
    "pricing",
    "textContent",
    "title",
    "price",
    "_14",
    "button5",
    "textContainer5",
    "cta10",
    "property1ImageBackgroundSignup",
    "imageLummi5",
    "copyComponent4",
    "headingContainer3",
    "signUpHeading",
    "subheading8",
    "googleLogin",
    "img",
    "continueWithGoogle",
    "separator",
    "line",
    "line2",
    "form",
    "input",
    "label",
    "inputForm2",
    "textContainer6",
    "placeholderText2",
    "button6",
    "textContainer7",
    "cta11",
    "byContinuingYouAgreeToOurTermsOfServiceAndPrivacyPolicy",
    "typeBubbleMegaMenuFooter",
    "bubbleContainer",
    "content8",
    "brand2",
    "logo",
    "brandName2",
    "slogan",
    "links",
    "list",
    "listHeading",
    "listLinkItem",
    "listLinkItem2",
    "listLinkItem3",
    "list2",
    "listHeading2",
    "listLinkItem4",
    "listLinkItem5",
    "listLinkItem6",
    "list3",
    "listHeading3",
    "listLinkItem7",
    "listLinkItem8",
    "listLinkItem9",
    "divider",
    "legals",
    "copyright",
    "list4",
    "listLinkItem10",
    "listLinkItem11"
  ],
  chatServiceIntegrationHubHome: [
    "chatServiceIntegrationHubHome",
    "typeHeaderWithSearchbarAndSignupCta",
    "brand",
    "brandName",
    "inputForm",
    "textContainer",
    "placeholderText",
    "navLinks",
    "navLink",
    "navLabel",
    "button",
    "textContainer2",
    "cta",
    "property1SoftwareHeroPhoneMockupWithBubbles",
    "wrapper",
    "copyContainer",
    "copyComponent",
    "headingText",
    "heading",
    "subheading",
    "buttonCombo",
    "ctaButton",
    "textContainer3",
    "cta2",
    "secondaryButton",
    "textContainer4",
    "cta3",
    "mediaLayouts",
    "frame1321314717",
    "device",
    "iPhone14Starlight1",
    "typeThreeFeatureCardsHorizontal",
    "content",
    "headingContainer",
    "heading2",
    "subheading2",
    "cardsGrid",
    "bigCard",
    "content2",
    "contentContainer",
    "subheading3",
    "content3",
    "heading3",
    "text",
    "cta4",
    "button2",
    "cta5",
    "imageLummi",
    "bigCard2",
    "content4",
    "contentContainer2",
    "subheading4",
    "content5",
    "heading4",
    "text2",
    "cta6",
    "button3",
    "cta7",
    "imageLummi2",
    "bigCard3",
    "content6",
    "contentContainer3",
    "subheading5",
    "content7",
    "heading5",
    "text3",
    "cta8",
    "button4",
    "cta9",
    "imageLummi3",
    "property1StepsGridSingleImage",
    "headingWrapper",
    "headingContainer2",
    "imageLummi4",
    "copyComponent2",
    "headingText2",
    "heading6",
    "subheading6",
    "stepsWrapper",
    "howItWorksGrid",
    "step01",
    "stepTitle",
    "stepDescription",
    "step02",
    "stepTitle2",
    "stepDescription2",
    "step03",
    "stepTitle3",
    "stepDescription3",
    "step04",
    "stepTitle4",
    "stepDescription4",
    "property1CardsTestimonials",
    "heading7",
    "testimonialsGrid",
    "testimonial",
    "imageLummiCategoryavatars",
    "name",
    "shortTestimonial",
    "testimonial2",
    "imageLummiCategoryavatars2",
    "name2",
    "shortTestimonial2",
    "testimonial3",
    "imageLummiCategoryavatars3",
    "name3",
    "shortTestimonial3",
    "property1PricingStartingFromProperty2SingleStacked",
    "copyComponent3",
    "headingText3",
    "heading8",
    "subheading7",
    "pricing",
    "textContent",
    "title",
    "price",
    "_14",
    "button5",
    "textContainer5",
    "cta10",
    "property1ImageBackgroundSignup",
    "imageLummi5",
    "copyComponent4",
    "headingContainer3",
    "signUpHeading",
    "subheading8",
    "googleLogin",
    "img",
    "continueWithGoogle",
    "separator",
    "line",
    "line2",
    "form",
    "input",
    "label",
    "inputForm2",
    "textContainer6",
    "placeholderText2",
    "button6",
    "textContainer7",
    "cta11",
    "byContinuingYouAgreeToOurTermsOfServiceAndPrivacyPolicy",
    "typeBubbleMegaMenuFooter",
    "bubbleContainer",
    "content8",
    "brand2",
    "logo",
    "brandName2",
    "slogan",
    "links",
    "list",
    "listHeading",
    "listLinkItem",
    "listLinkItem2",
    "listLinkItem3",
    "list2",
    "listHeading2",
    "listLinkItem4",
    "listLinkItem5",
    "listLinkItem6",
    "list3",
    "listHeading3",
    "listLinkItem7",
    "listLinkItem8",
    "listLinkItem9",
    "divider",
    "legals",
    "copyright",
    "list4",
    "listLinkItem10",
    "listLinkItem11"
  ],
  typeHeaderWithSearchbarAndSignupCta: [
    "typeHeaderWithSearchbarAndSignupCta",
    "brand",
    "brandName",
    "inputForm",
    "textContainer",
    "placeholderText",
    "navLinks",
    "navLink",
    "navLabel",
    "button",
    "textContainer2",
    "cta"
  ],
  brand: ["brand", "brandName"],
  brandName: ["brandName"],
  inputForm: ["inputForm", "textContainer", "placeholderText"],
  textContainer: ["textContainer", "placeholderText"],
  placeholderText: ["placeholderText"],
  navLinks: [
    "navLinks",
    "navLink",
    "navLabel",
    "button",
    "textContainer2",
    "cta"
  ],
  navLink: ["navLink", "navLabel"],
  navLabel: ["navLabel"],
  button: ["button", "textContainer2", "cta"],
  textContainer2: ["textContainer2", "cta"],
  cta: ["cta"],
  property1SoftwareHeroPhoneMockupWithBubbles: [
    "property1SoftwareHeroPhoneMockupWithBubbles",
    "wrapper",
    "copyContainer",
    "copyComponent",
    "headingText",
    "heading",
    "subheading",
    "buttonCombo",
    "ctaButton",
    "textContainer3",
    "cta2",
    "secondaryButton",
    "textContainer4",
    "cta3",
    "mediaLayouts",
    "frame1321314717",
    "device",
    "iPhone14Starlight1"
  ],
  wrapper: [
    "wrapper",
    "copyContainer",
    "copyComponent",
    "headingText",
    "heading",
    "subheading",
    "buttonCombo",
    "ctaButton",
    "textContainer3",
    "cta2",
    "secondaryButton",
    "textContainer4",
    "cta3",
    "mediaLayouts",
    "frame1321314717",
    "device",
    "iPhone14Starlight1"
  ],
  copyContainer: [
    "copyContainer",
    "copyComponent",
    "headingText",
    "heading",
    "subheading",
    "buttonCombo",
    "ctaButton",
    "textContainer3",
    "cta2",
    "secondaryButton",
    "textContainer4",
    "cta3"
  ],
  copyComponent: [
    "copyComponent",
    "headingText",
    "heading",
    "subheading",
    "buttonCombo",
    "ctaButton",
    "textContainer3",
    "cta2",
    "secondaryButton",
    "textContainer4",
    "cta3"
  ],
  headingText: ["headingText", "heading", "subheading"],
  heading: ["heading"],
  subheading: ["subheading"],
  buttonCombo: [
    "buttonCombo",
    "ctaButton",
    "textContainer3",
    "cta2",
    "secondaryButton",
    "textContainer4",
    "cta3"
  ],
  ctaButton: ["ctaButton", "textContainer3", "cta2"],
  textContainer3: ["textContainer3", "cta2"],
  cta2: ["cta2"],
  secondaryButton: ["secondaryButton", "textContainer4", "cta3"],
  textContainer4: ["textContainer4", "cta3"],
  cta3: ["cta3"],
  mediaLayouts: [
    "mediaLayouts",
    "frame1321314717",
    "device",
    "iPhone14Starlight1"
  ],
  frame1321314717: ["frame1321314717", "device", "iPhone14Starlight1"],
  device: ["device", "iPhone14Starlight1"],
  iPhone14Starlight1: ["iPhone14Starlight1"],
  typeThreeFeatureCardsHorizontal: [
    "typeThreeFeatureCardsHorizontal",
    "content",
    "headingContainer",
    "heading2",
    "subheading2",
    "cardsGrid",
    "bigCard",
    "content2",
    "contentContainer",
    "subheading3",
    "content3",
    "heading3",
    "text",
    "cta4",
    "button2",
    "cta5",
    "imageLummi",
    "bigCard2",
    "content4",
    "contentContainer2",
    "subheading4",
    "content5",
    "heading4",
    "text2",
    "cta6",
    "button3",
    "cta7",
    "imageLummi2",
    "bigCard3",
    "content6",
    "contentContainer3",
    "subheading5",
    "content7",
    "heading5",
    "text3",
    "cta8",
    "button4",
    "cta9",
    "imageLummi3"
  ],
  content: [
    "content",
    "headingContainer",
    "heading2",
    "subheading2",
    "cardsGrid",
    "bigCard",
    "content2",
    "contentContainer",
    "subheading3",
    "content3",
    "heading3",
    "text",
    "cta4",
    "button2",
    "cta5",
    "imageLummi",
    "bigCard2",
    "content4",
    "contentContainer2",
    "subheading4",
    "content5",
    "heading4",
    "text2",
    "cta6",
    "button3",
    "cta7",
    "imageLummi2",
    "bigCard3",
    "content6",
    "contentContainer3",
    "subheading5",
    "content7",
    "heading5",
    "text3",
    "cta8",
    "button4",
    "cta9",
    "imageLummi3"
  ],
  headingContainer: ["headingContainer", "heading2", "subheading2"],
  heading2: ["heading2"],
  subheading2: ["subheading2"],
  cardsGrid: [
    "cardsGrid",
    "bigCard",
    "content2",
    "contentContainer",
    "subheading3",
    "content3",
    "heading3",
    "text",
    "cta4",
    "button2",
    "cta5",
    "imageLummi",
    "bigCard2",
    "content4",
    "contentContainer2",
    "subheading4",
    "content5",
    "heading4",
    "text2",
    "cta6",
    "button3",
    "cta7",
    "imageLummi2",
    "bigCard3",
    "content6",
    "contentContainer3",
    "subheading5",
    "content7",
    "heading5",
    "text3",
    "cta8",
    "button4",
    "cta9",
    "imageLummi3"
  ],
  bigCard: [
    "bigCard",
    "content2",
    "contentContainer",
    "subheading3",
    "content3",
    "heading3",
    "text",
    "cta4",
    "button2",
    "cta5",
    "imageLummi"
  ],
  content2: [
    "content2",
    "contentContainer",
    "subheading3",
    "content3",
    "heading3",
    "text",
    "cta4",
    "button2",
    "cta5"
  ],
  contentContainer: [
    "contentContainer",
    "subheading3",
    "content3",
    "heading3",
    "text"
  ],
  subheading3: ["subheading3"],
  content3: ["content3", "heading3", "text"],
  heading3: ["heading3"],
  text: ["text"],
  cta4: ["cta4", "button2", "cta5"],
  button2: ["button2", "cta5"],
  cta5: ["cta5"],
  imageLummi: ["imageLummi"],
  bigCard2: [
    "bigCard2",
    "content4",
    "contentContainer2",
    "subheading4",
    "content5",
    "heading4",
    "text2",
    "cta6",
    "button3",
    "cta7",
    "imageLummi2"
  ],
  content4: [
    "content4",
    "contentContainer2",
    "subheading4",
    "content5",
    "heading4",
    "text2",
    "cta6",
    "button3",
    "cta7"
  ],
  contentContainer2: [
    "contentContainer2",
    "subheading4",
    "content5",
    "heading4",
    "text2"
  ],
  subheading4: ["subheading4"],
  content5: ["content5", "heading4", "text2"],
  heading4: ["heading4"],
  text2: ["text2"],
  cta6: ["cta6", "button3", "cta7"],
  button3: ["button3", "cta7"],
  cta7: ["cta7"],
  imageLummi2: ["imageLummi2"],
  bigCard3: [
    "bigCard3",
    "content6",
    "contentContainer3",
    "subheading5",
    "content7",
    "heading5",
    "text3",
    "cta8",
    "button4",
    "cta9",
    "imageLummi3"
  ],
  content6: [
    "content6",
    "contentContainer3",
    "subheading5",
    "content7",
    "heading5",
    "text3",
    "cta8",
    "button4",
    "cta9"
  ],
  contentContainer3: [
    "contentContainer3",
    "subheading5",
    "content7",
    "heading5",
    "text3"
  ],
  subheading5: ["subheading5"],
  content7: ["content7", "heading5", "text3"],
  heading5: ["heading5"],
  text3: ["text3"],
  cta8: ["cta8", "button4", "cta9"],
  button4: ["button4", "cta9"],
  cta9: ["cta9"],
  imageLummi3: ["imageLummi3"],
  property1StepsGridSingleImage: [
    "property1StepsGridSingleImage",
    "headingWrapper",
    "headingContainer2",
    "imageLummi4",
    "copyComponent2",
    "headingText2",
    "heading6",
    "subheading6",
    "stepsWrapper",
    "howItWorksGrid",
    "step01",
    "stepTitle",
    "stepDescription",
    "step02",
    "stepTitle2",
    "stepDescription2",
    "step03",
    "stepTitle3",
    "stepDescription3",
    "step04",
    "stepTitle4",
    "stepDescription4"
  ],
  headingWrapper: [
    "headingWrapper",
    "headingContainer2",
    "imageLummi4",
    "copyComponent2",
    "headingText2",
    "heading6",
    "subheading6"
  ],
  headingContainer2: [
    "headingContainer2",
    "imageLummi4",
    "copyComponent2",
    "headingText2",
    "heading6",
    "subheading6"
  ],
  imageLummi4: ["imageLummi4"],
  copyComponent2: ["copyComponent2", "headingText2", "heading6", "subheading6"],
  headingText2: ["headingText2", "heading6", "subheading6"],
  heading6: ["heading6"],
  subheading6: ["subheading6"],
  stepsWrapper: [
    "stepsWrapper",
    "howItWorksGrid",
    "step01",
    "stepTitle",
    "stepDescription",
    "step02",
    "stepTitle2",
    "stepDescription2",
    "step03",
    "stepTitle3",
    "stepDescription3",
    "step04",
    "stepTitle4",
    "stepDescription4"
  ],
  howItWorksGrid: [
    "howItWorksGrid",
    "step01",
    "stepTitle",
    "stepDescription",
    "step02",
    "stepTitle2",
    "stepDescription2",
    "step03",
    "stepTitle3",
    "stepDescription3",
    "step04",
    "stepTitle4",
    "stepDescription4"
  ],
  step01: ["step01", "stepTitle", "stepDescription"],
  stepTitle: ["stepTitle"],
  stepDescription: ["stepDescription"],
  step02: ["step02", "stepTitle2", "stepDescription2"],
  stepTitle2: ["stepTitle2"],
  stepDescription2: ["stepDescription2"],
  step03: ["step03", "stepTitle3", "stepDescription3"],
  stepTitle3: ["stepTitle3"],
  stepDescription3: ["stepDescription3"],
  step04: ["step04", "stepTitle4", "stepDescription4"],
  stepTitle4: ["stepTitle4"],
  stepDescription4: ["stepDescription4"],
  property1CardsTestimonials: [
    "property1CardsTestimonials",
    "heading7",
    "testimonialsGrid",
    "testimonial",
    "imageLummiCategoryavatars",
    "name",
    "shortTestimonial",
    "testimonial2",
    "imageLummiCategoryavatars2",
    "name2",
    "shortTestimonial2",
    "testimonial3",
    "imageLummiCategoryavatars3",
    "name3",
    "shortTestimonial3"
  ],
  heading7: ["heading7"],
  testimonialsGrid: [
    "testimonialsGrid",
    "testimonial",
    "imageLummiCategoryavatars",
    "name",
    "shortTestimonial",
    "testimonial2",
    "imageLummiCategoryavatars2",
    "name2",
    "shortTestimonial2",
    "testimonial3",
    "imageLummiCategoryavatars3",
    "name3",
    "shortTestimonial3"
  ],
  testimonial: [
    "testimonial",
    "imageLummiCategoryavatars",
    "name",
    "shortTestimonial"
  ],
  imageLummiCategoryavatars: ["imageLummiCategoryavatars"],
  name: ["name"],
  shortTestimonial: ["shortTestimonial"],
  testimonial2: [
    "testimonial2",
    "imageLummiCategoryavatars2",
    "name2",
    "shortTestimonial2"
  ],
  imageLummiCategoryavatars2: ["imageLummiCategoryavatars2"],
  name2: ["name2"],
  shortTestimonial2: ["shortTestimonial2"],
  testimonial3: [
    "testimonial3",
    "imageLummiCategoryavatars3",
    "name3",
    "shortTestimonial3"
  ],
  imageLummiCategoryavatars3: ["imageLummiCategoryavatars3"],
  name3: ["name3"],
  shortTestimonial3: ["shortTestimonial3"],
  property1PricingStartingFromProperty2SingleStacked: [
    "property1PricingStartingFromProperty2SingleStacked",
    "copyComponent3",
    "headingText3",
    "heading8",
    "subheading7",
    "pricing",
    "textContent",
    "title",
    "price",
    "_14",
    "button5",
    "textContainer5",
    "cta10"
  ],
  copyComponent3: ["copyComponent3", "headingText3", "heading8", "subheading7"],
  headingText3: ["headingText3", "heading8", "subheading7"],
  heading8: ["heading8"],
  subheading7: ["subheading7"],
  pricing: ["pricing", "textContent", "title", "price", "_14"],
  textContent: ["textContent", "title", "price", "_14"],
  title: ["title"],
  price: ["price", "_14"],
  _14: ["_14"],
  button5: ["button5", "textContainer5", "cta10"],
  textContainer5: ["textContainer5", "cta10"],
  cta10: ["cta10"],
  property1ImageBackgroundSignup: [
    "property1ImageBackgroundSignup",
    "imageLummi5",
    "copyComponent4",
    "headingContainer3",
    "signUpHeading",
    "subheading8",
    "googleLogin",
    "img",
    "continueWithGoogle",
    "separator",
    "line",
    "line2",
    "form",
    "input",
    "label",
    "inputForm2",
    "textContainer6",
    "placeholderText2",
    "button6",
    "textContainer7",
    "cta11",
    "byContinuingYouAgreeToOurTermsOfServiceAndPrivacyPolicy"
  ],
  imageLummi5: ["imageLummi5"],
  copyComponent4: [
    "copyComponent4",
    "headingContainer3",
    "signUpHeading",
    "subheading8",
    "googleLogin",
    "img",
    "continueWithGoogle",
    "separator",
    "line",
    "line2",
    "form",
    "input",
    "label",
    "inputForm2",
    "textContainer6",
    "placeholderText2",
    "button6",
    "textContainer7",
    "cta11",
    "byContinuingYouAgreeToOurTermsOfServiceAndPrivacyPolicy"
  ],
  headingContainer3: ["headingContainer3", "signUpHeading", "subheading8"],
  signUpHeading: ["signUpHeading"],
  subheading8: ["subheading8"],
  googleLogin: ["googleLogin", "img", "continueWithGoogle"],
  img: ["img"],
  continueWithGoogle: ["continueWithGoogle"],
  separator: ["separator", "line", "line2"],
  line: ["line"],
  line2: ["line2"],
  form: [
    "form",
    "input",
    "label",
    "inputForm2",
    "textContainer6",
    "placeholderText2",
    "button6",
    "textContainer7",
    "cta11"
  ],
  input: ["input", "label", "inputForm2", "textContainer6", "placeholderText2"],
  label: ["label"],
  inputForm2: ["inputForm2", "textContainer6", "placeholderText2"],
  textContainer6: ["textContainer6", "placeholderText2"],
  placeholderText2: ["placeholderText2"],
  button6: ["button6", "textContainer7", "cta11"],
  textContainer7: ["textContainer7", "cta11"],
  cta11: ["cta11"],
  byContinuingYouAgreeToOurTermsOfServiceAndPrivacyPolicy: [
    "byContinuingYouAgreeToOurTermsOfServiceAndPrivacyPolicy"
  ],
  typeBubbleMegaMenuFooter: [
    "typeBubbleMegaMenuFooter",
    "bubbleContainer",
    "content8",
    "brand2",
    "logo",
    "brandName2",
    "slogan",
    "links",
    "list",
    "listHeading",
    "listLinkItem",
    "listLinkItem2",
    "listLinkItem3",
    "list2",
    "listHeading2",
    "listLinkItem4",
    "listLinkItem5",
    "listLinkItem6",
    "list3",
    "listHeading3",
    "listLinkItem7",
    "listLinkItem8",
    "listLinkItem9",
    "divider",
    "legals",
    "copyright",
    "list4",
    "listLinkItem10",
    "listLinkItem11"
  ],
  bubbleContainer: [
    "bubbleContainer",
    "content8",
    "brand2",
    "logo",
    "brandName2",
    "slogan",
    "links",
    "list",
    "listHeading",
    "listLinkItem",
    "listLinkItem2",
    "listLinkItem3",
    "list2",
    "listHeading2",
    "listLinkItem4",
    "listLinkItem5",
    "listLinkItem6",
    "list3",
    "listHeading3",
    "listLinkItem7",
    "listLinkItem8",
    "listLinkItem9",
    "divider",
    "legals",
    "copyright",
    "list4",
    "listLinkItem10",
    "listLinkItem11"
  ],
  content8: [
    "content8",
    "brand2",
    "logo",
    "brandName2",
    "slogan",
    "links",
    "list",
    "listHeading",
    "listLinkItem",
    "listLinkItem2",
    "listLinkItem3",
    "list2",
    "listHeading2",
    "listLinkItem4",
    "listLinkItem5",
    "listLinkItem6",
    "list3",
    "listHeading3",
    "listLinkItem7",
    "listLinkItem8",
    "listLinkItem9"
  ],
  brand2: ["brand2", "logo", "brandName2", "slogan"],
  logo: ["logo", "brandName2"],
  brandName2: ["brandName2"],
  slogan: ["slogan"],
  links: [
    "links",
    "list",
    "listHeading",
    "listLinkItem",
    "listLinkItem2",
    "listLinkItem3",
    "list2",
    "listHeading2",
    "listLinkItem4",
    "listLinkItem5",
    "listLinkItem6",
    "list3",
    "listHeading3",
    "listLinkItem7",
    "listLinkItem8",
    "listLinkItem9"
  ],
  list: [
    "list",
    "listHeading",
    "listLinkItem",
    "listLinkItem2",
    "listLinkItem3"
  ],
  listHeading: ["listHeading"],
  listLinkItem: ["listLinkItem"],
  listLinkItem2: ["listLinkItem2"],
  listLinkItem3: ["listLinkItem3"],
  list2: [
    "list2",
    "listHeading2",
    "listLinkItem4",
    "listLinkItem5",
    "listLinkItem6"
  ],
  listHeading2: ["listHeading2"],
  listLinkItem4: ["listLinkItem4"],
  listLinkItem5: ["listLinkItem5"],
  listLinkItem6: ["listLinkItem6"],
  list3: [
    "list3",
    "listHeading3",
    "listLinkItem7",
    "listLinkItem8",
    "listLinkItem9"
  ],
  listHeading3: ["listHeading3"],
  listLinkItem7: ["listLinkItem7"],
  listLinkItem8: ["listLinkItem8"],
  listLinkItem9: ["listLinkItem9"],
  divider: ["divider"],
  legals: ["legals", "copyright", "list4", "listLinkItem10", "listLinkItem11"],
  copyright: ["copyright"],
  list4: ["list4", "listLinkItem10", "listLinkItem11"],
  listLinkItem10: ["listLinkItem10"],
  listLinkItem11: ["listLinkItem11"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  root: "div";
  chatServiceIntegrationHubHome: "div";
  typeHeaderWithSearchbarAndSignupCta: "div";
  brand: "div";
  brandName: "div";
  inputForm: "div";
  textContainer: "div";
  placeholderText: "div";
  navLinks: "div";
  navLink: "div";
  navLabel: "div";
  button: "div";
  textContainer2: "div";
  cta: "div";
  property1SoftwareHeroPhoneMockupWithBubbles: "div";
  wrapper: "div";
  copyContainer: "div";
  copyComponent: "div";
  headingText: "div";
  heading: "div";
  subheading: "div";
  buttonCombo: "div";
  ctaButton: "div";
  textContainer3: "div";
  cta2: "div";
  secondaryButton: "div";
  textContainer4: "div";
  cta3: "div";
  mediaLayouts: "div";
  frame1321314717: "div";
  device: "div";
  iPhone14Starlight1: "div";
  typeThreeFeatureCardsHorizontal: "div";
  content: "div";
  headingContainer: "div";
  heading2: "div";
  subheading2: "div";
  cardsGrid: "div";
  bigCard: "div";
  content2: "div";
  contentContainer: "div";
  subheading3: "div";
  content3: "div";
  heading3: "div";
  text: "div";
  cta4: "div";
  button2: "div";
  cta5: "div";
  imageLummi: "div";
  bigCard2: "div";
  content4: "div";
  contentContainer2: "div";
  subheading4: "div";
  content5: "div";
  heading4: "div";
  text2: "div";
  cta6: "div";
  button3: "div";
  cta7: "div";
  imageLummi2: "div";
  bigCard3: "div";
  content6: "div";
  contentContainer3: "div";
  subheading5: "div";
  content7: "div";
  heading5: "div";
  text3: "div";
  cta8: "div";
  button4: "div";
  cta9: "div";
  imageLummi3: "div";
  property1StepsGridSingleImage: "div";
  headingWrapper: "div";
  headingContainer2: "div";
  imageLummi4: "div";
  copyComponent2: "div";
  headingText2: "div";
  heading6: "div";
  subheading6: "div";
  stepsWrapper: "div";
  howItWorksGrid: "div";
  step01: "div";
  stepTitle: "div";
  stepDescription: "div";
  step02: "div";
  stepTitle2: "div";
  stepDescription2: "div";
  step03: "div";
  stepTitle3: "div";
  stepDescription3: "div";
  step04: "div";
  stepTitle4: "div";
  stepDescription4: "div";
  property1CardsTestimonials: "div";
  heading7: "div";
  testimonialsGrid: "div";
  testimonial: "div";
  imageLummiCategoryavatars: "div";
  name: "div";
  shortTestimonial: "div";
  testimonial2: "div";
  imageLummiCategoryavatars2: "div";
  name2: "div";
  shortTestimonial2: "div";
  testimonial3: "div";
  imageLummiCategoryavatars3: "div";
  name3: "div";
  shortTestimonial3: "div";
  property1PricingStartingFromProperty2SingleStacked: "div";
  copyComponent3: "div";
  headingText3: "div";
  heading8: "div";
  subheading7: "div";
  pricing: "div";
  textContent: "div";
  title: "div";
  price: "div";
  _14: "div";
  button5: "div";
  textContainer5: "div";
  cta10: "div";
  property1ImageBackgroundSignup: "div";
  imageLummi5: "div";
  copyComponent4: "div";
  headingContainer3: "div";
  signUpHeading: "div";
  subheading8: "div";
  googleLogin: "div";
  img: typeof PlasmicImg__;
  continueWithGoogle: "div";
  separator: "div";
  line: "div";
  line2: "div";
  form: "div";
  input: "div";
  label: "div";
  inputForm2: "div";
  textContainer6: "div";
  placeholderText2: "div";
  button6: "div";
  textContainer7: "div";
  cta11: "div";
  byContinuingYouAgreeToOurTermsOfServiceAndPrivacyPolicy: "div";
  typeBubbleMegaMenuFooter: "div";
  bubbleContainer: "div";
  content8: "div";
  brand2: "div";
  logo: "div";
  brandName2: "div";
  slogan: "div";
  links: "div";
  list: "div";
  listHeading: "div";
  listLinkItem: "div";
  listLinkItem2: "div";
  listLinkItem3: "div";
  list2: "div";
  listHeading2: "div";
  listLinkItem4: "div";
  listLinkItem5: "div";
  listLinkItem6: "div";
  list3: "div";
  listHeading3: "div";
  listLinkItem7: "div";
  listLinkItem8: "div";
  listLinkItem9: "div";
  divider: "div";
  legals: "div";
  copyright: "div";
  list4: "div";
  listLinkItem10: "div";
  listLinkItem11: "div";
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicNewPage__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicNewPage__VariantsArgs;
    args?: PlasmicNewPage__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicNewPage__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    /* Specify args directly as props*/ Omit<
      PlasmicNewPage__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicNewPage__ArgProps,
          internalVariantPropNames: PlasmicNewPage__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicNewPage__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicNewPage";
  } else {
    func.displayName = `PlasmicNewPage.${nodeName}`;
  }
  return func;
}

export const PlasmicNewPage = Object.assign(
  // Top-level PlasmicNewPage renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    chatServiceIntegrationHubHome: makeNodeComponent(
      "chatServiceIntegrationHubHome"
    ),
    typeHeaderWithSearchbarAndSignupCta: makeNodeComponent(
      "typeHeaderWithSearchbarAndSignupCta"
    ),
    brand: makeNodeComponent("brand"),
    brandName: makeNodeComponent("brandName"),
    inputForm: makeNodeComponent("inputForm"),
    textContainer: makeNodeComponent("textContainer"),
    placeholderText: makeNodeComponent("placeholderText"),
    navLinks: makeNodeComponent("navLinks"),
    navLink: makeNodeComponent("navLink"),
    navLabel: makeNodeComponent("navLabel"),
    button: makeNodeComponent("button"),
    textContainer2: makeNodeComponent("textContainer2"),
    cta: makeNodeComponent("cta"),
    property1SoftwareHeroPhoneMockupWithBubbles: makeNodeComponent(
      "property1SoftwareHeroPhoneMockupWithBubbles"
    ),
    wrapper: makeNodeComponent("wrapper"),
    copyContainer: makeNodeComponent("copyContainer"),
    copyComponent: makeNodeComponent("copyComponent"),
    headingText: makeNodeComponent("headingText"),
    heading: makeNodeComponent("heading"),
    subheading: makeNodeComponent("subheading"),
    buttonCombo: makeNodeComponent("buttonCombo"),
    ctaButton: makeNodeComponent("ctaButton"),
    textContainer3: makeNodeComponent("textContainer3"),
    cta2: makeNodeComponent("cta2"),
    secondaryButton: makeNodeComponent("secondaryButton"),
    textContainer4: makeNodeComponent("textContainer4"),
    cta3: makeNodeComponent("cta3"),
    mediaLayouts: makeNodeComponent("mediaLayouts"),
    frame1321314717: makeNodeComponent("frame1321314717"),
    device: makeNodeComponent("device"),
    iPhone14Starlight1: makeNodeComponent("iPhone14Starlight1"),
    typeThreeFeatureCardsHorizontal: makeNodeComponent(
      "typeThreeFeatureCardsHorizontal"
    ),
    content: makeNodeComponent("content"),
    headingContainer: makeNodeComponent("headingContainer"),
    heading2: makeNodeComponent("heading2"),
    subheading2: makeNodeComponent("subheading2"),
    cardsGrid: makeNodeComponent("cardsGrid"),
    bigCard: makeNodeComponent("bigCard"),
    content2: makeNodeComponent("content2"),
    contentContainer: makeNodeComponent("contentContainer"),
    subheading3: makeNodeComponent("subheading3"),
    content3: makeNodeComponent("content3"),
    heading3: makeNodeComponent("heading3"),
    text: makeNodeComponent("text"),
    cta4: makeNodeComponent("cta4"),
    button2: makeNodeComponent("button2"),
    cta5: makeNodeComponent("cta5"),
    imageLummi: makeNodeComponent("imageLummi"),
    bigCard2: makeNodeComponent("bigCard2"),
    content4: makeNodeComponent("content4"),
    contentContainer2: makeNodeComponent("contentContainer2"),
    subheading4: makeNodeComponent("subheading4"),
    content5: makeNodeComponent("content5"),
    heading4: makeNodeComponent("heading4"),
    text2: makeNodeComponent("text2"),
    cta6: makeNodeComponent("cta6"),
    button3: makeNodeComponent("button3"),
    cta7: makeNodeComponent("cta7"),
    imageLummi2: makeNodeComponent("imageLummi2"),
    bigCard3: makeNodeComponent("bigCard3"),
    content6: makeNodeComponent("content6"),
    contentContainer3: makeNodeComponent("contentContainer3"),
    subheading5: makeNodeComponent("subheading5"),
    content7: makeNodeComponent("content7"),
    heading5: makeNodeComponent("heading5"),
    text3: makeNodeComponent("text3"),
    cta8: makeNodeComponent("cta8"),
    button4: makeNodeComponent("button4"),
    cta9: makeNodeComponent("cta9"),
    imageLummi3: makeNodeComponent("imageLummi3"),
    property1StepsGridSingleImage: makeNodeComponent(
      "property1StepsGridSingleImage"
    ),
    headingWrapper: makeNodeComponent("headingWrapper"),
    headingContainer2: makeNodeComponent("headingContainer2"),
    imageLummi4: makeNodeComponent("imageLummi4"),
    copyComponent2: makeNodeComponent("copyComponent2"),
    headingText2: makeNodeComponent("headingText2"),
    heading6: makeNodeComponent("heading6"),
    subheading6: makeNodeComponent("subheading6"),
    stepsWrapper: makeNodeComponent("stepsWrapper"),
    howItWorksGrid: makeNodeComponent("howItWorksGrid"),
    step01: makeNodeComponent("step01"),
    stepTitle: makeNodeComponent("stepTitle"),
    stepDescription: makeNodeComponent("stepDescription"),
    step02: makeNodeComponent("step02"),
    stepTitle2: makeNodeComponent("stepTitle2"),
    stepDescription2: makeNodeComponent("stepDescription2"),
    step03: makeNodeComponent("step03"),
    stepTitle3: makeNodeComponent("stepTitle3"),
    stepDescription3: makeNodeComponent("stepDescription3"),
    step04: makeNodeComponent("step04"),
    stepTitle4: makeNodeComponent("stepTitle4"),
    stepDescription4: makeNodeComponent("stepDescription4"),
    property1CardsTestimonials: makeNodeComponent("property1CardsTestimonials"),
    heading7: makeNodeComponent("heading7"),
    testimonialsGrid: makeNodeComponent("testimonialsGrid"),
    testimonial: makeNodeComponent("testimonial"),
    imageLummiCategoryavatars: makeNodeComponent("imageLummiCategoryavatars"),
    _name: makeNodeComponent("name"),
    shortTestimonial: makeNodeComponent("shortTestimonial"),
    testimonial2: makeNodeComponent("testimonial2"),
    imageLummiCategoryavatars2: makeNodeComponent("imageLummiCategoryavatars2"),
    name2: makeNodeComponent("name2"),
    shortTestimonial2: makeNodeComponent("shortTestimonial2"),
    testimonial3: makeNodeComponent("testimonial3"),
    imageLummiCategoryavatars3: makeNodeComponent("imageLummiCategoryavatars3"),
    name3: makeNodeComponent("name3"),
    shortTestimonial3: makeNodeComponent("shortTestimonial3"),
    property1PricingStartingFromProperty2SingleStacked: makeNodeComponent(
      "property1PricingStartingFromProperty2SingleStacked"
    ),
    copyComponent3: makeNodeComponent("copyComponent3"),
    headingText3: makeNodeComponent("headingText3"),
    heading8: makeNodeComponent("heading8"),
    subheading7: makeNodeComponent("subheading7"),
    pricing: makeNodeComponent("pricing"),
    textContent: makeNodeComponent("textContent"),
    title: makeNodeComponent("title"),
    price: makeNodeComponent("price"),
    _14: makeNodeComponent("_14"),
    button5: makeNodeComponent("button5"),
    textContainer5: makeNodeComponent("textContainer5"),
    cta10: makeNodeComponent("cta10"),
    property1ImageBackgroundSignup: makeNodeComponent(
      "property1ImageBackgroundSignup"
    ),
    imageLummi5: makeNodeComponent("imageLummi5"),
    copyComponent4: makeNodeComponent("copyComponent4"),
    headingContainer3: makeNodeComponent("headingContainer3"),
    signUpHeading: makeNodeComponent("signUpHeading"),
    subheading8: makeNodeComponent("subheading8"),
    googleLogin: makeNodeComponent("googleLogin"),
    img: makeNodeComponent("img"),
    continueWithGoogle: makeNodeComponent("continueWithGoogle"),
    separator: makeNodeComponent("separator"),
    line: makeNodeComponent("line"),
    line2: makeNodeComponent("line2"),
    form: makeNodeComponent("form"),
    input: makeNodeComponent("input"),
    label: makeNodeComponent("label"),
    inputForm2: makeNodeComponent("inputForm2"),
    textContainer6: makeNodeComponent("textContainer6"),
    placeholderText2: makeNodeComponent("placeholderText2"),
    button6: makeNodeComponent("button6"),
    textContainer7: makeNodeComponent("textContainer7"),
    cta11: makeNodeComponent("cta11"),
    byContinuingYouAgreeToOurTermsOfServiceAndPrivacyPolicy: makeNodeComponent(
      "byContinuingYouAgreeToOurTermsOfServiceAndPrivacyPolicy"
    ),
    typeBubbleMegaMenuFooter: makeNodeComponent("typeBubbleMegaMenuFooter"),
    bubbleContainer: makeNodeComponent("bubbleContainer"),
    content8: makeNodeComponent("content8"),
    brand2: makeNodeComponent("brand2"),
    logo: makeNodeComponent("logo"),
    brandName2: makeNodeComponent("brandName2"),
    slogan: makeNodeComponent("slogan"),
    links: makeNodeComponent("links"),
    list: makeNodeComponent("list"),
    listHeading: makeNodeComponent("listHeading"),
    listLinkItem: makeNodeComponent("listLinkItem"),
    listLinkItem2: makeNodeComponent("listLinkItem2"),
    listLinkItem3: makeNodeComponent("listLinkItem3"),
    list2: makeNodeComponent("list2"),
    listHeading2: makeNodeComponent("listHeading2"),
    listLinkItem4: makeNodeComponent("listLinkItem4"),
    listLinkItem5: makeNodeComponent("listLinkItem5"),
    listLinkItem6: makeNodeComponent("listLinkItem6"),
    list3: makeNodeComponent("list3"),
    listHeading3: makeNodeComponent("listHeading3"),
    listLinkItem7: makeNodeComponent("listLinkItem7"),
    listLinkItem8: makeNodeComponent("listLinkItem8"),
    listLinkItem9: makeNodeComponent("listLinkItem9"),
    divider: makeNodeComponent("divider"),
    legals: makeNodeComponent("legals"),
    copyright: makeNodeComponent("copyright"),
    list4: makeNodeComponent("list4"),
    listLinkItem10: makeNodeComponent("listLinkItem10"),
    listLinkItem11: makeNodeComponent("listLinkItem11"),

    // Metadata about props expected for PlasmicNewPage
    internalVariantProps: PlasmicNewPage__VariantProps,
    internalArgProps: PlasmicNewPage__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicNewPage;
/* prettier-ignore-end */
